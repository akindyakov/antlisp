#!/usr/bin/env python
# encoding: utf-8


def build(ctx):
    ctx.stlib(
        target="antlisp-lib-builtin",
        source = [
            "io.cpp",
            "math.cpp",
        ],
        use=[
            "antlisp-lib-cell",
            "antlisp-lib-cell_ext-string",
            "antlisp-lib-function",
        ],
    )
    ctx.program(
        target="builtin_math_ut",
        features="test",
        source="math_ut.cpp",
        use=[
            "antlisp-lib-builtin",
        ],
        lib=[
            "boost_filesystem",
            "boost_system",
        ],
    )
    ctx.program(
        target="builtin_math_sum_ut",
        features="test",
        source="math_sum_ut.cpp",
        use=[
            "antlisp-lib-builtin",
        ],
        lib=[
            "boost_filesystem",
            "boost_system",
        ],
    )
    ctx.program(
        target="builtin_math_multiplication_ut",
        features="test",
        source="math_multiplication_ut.cpp",
        use=[
            "antlisp-lib-builtin",
        ],
        lib=[
            "boost_filesystem",
            "boost_system",
        ],
    )
    ctx.program(
        target="builtin_math_less_ut",
        features="test",
        source="math_less_ut.cpp",
        use=[
            "antlisp-lib-builtin",
        ],
        lib=[
            "boost_filesystem",
            "boost_system",
        ],
    )
    ctx.program(
        target="builtin_math_eq_ut",
        features="test",
        source="math_eq_ut.cpp",
        use=[
            "antlisp-lib-builtin",
        ],
        lib=[
            "boost_filesystem",
            "boost_system",
        ],
    )
    ctx.program(
        target="builtin_math_div_ut",
        features="test",
        source="math_div_ut.cpp",
        use=[
            "antlisp-lib-builtin",
        ],
        lib=[
            "boost_filesystem",
            "boost_system",
        ],
    )
